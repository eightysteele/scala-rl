Index.PACKAGES = {"io.samritchie.rl.state" : [{"name" : "io.samritchie.rl.state.Bandit", "shortDescription" : "MDP with a single state.", "object" : "io\/samritchie\/rl\/state\/Bandit$.html", "members_object" : [{"label" : "initialStateGen", "tail" : "(k: Int, meanGenerator: Generator[Double], stdDev: Double): Generator[Bandit[Arm, Double]]", "member" : "io.samritchie.rl.state.Bandit.initialStateGen", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#initialStateGen(k:Int,meanGenerator:com.stripe.rainier.core.Generator[Double],stdDev:Double):com.stripe.rainier.core.Generator[io.samritchie.rl.state.Bandit[io.samritchie.rl.state.Bandit.Arm,Double]]", "kind" : "def"}, {"label" : "arms", "tail" : "(k: Int): Set[Arm]", "member" : "io.samritchie.rl.state.Bandit.arms", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#arms(k:Int):Set[io.samritchie.rl.state.Bandit.Arm]", "kind" : "def"}, {"label" : "Arm", "tail" : "", "member" : "io.samritchie.rl.state.Bandit.Arm", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#ArmextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Arm", "tail" : "", "member" : "io.samritchie.rl.state.Bandit.Arm", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#Arm", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/state\/Bandit$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "dynamics", "tail" : "(): Map[A, Generator[(R, State[A, R])]]", "member" : "io.samritchie.rl.state.Bandit.dynamics", "link" : "io\/samritchie\/rl\/state\/Bandit.html#dynamics:scala.collection.immutable.Map[A,com.stripe.rainier.core.Generator[(R,io.samritchie.rl.State[A,R])]]", "kind" : "def"}, {"member" : "io.samritchie.rl.state.Bandit#<init>", "error" : "unsupported entity"}, {"label" : "rewards", "tail" : ": Map[A, Generator[R]]", "member" : "io.samritchie.rl.state.Bandit.rewards", "link" : "io\/samritchie\/rl\/state\/Bandit.html#rewards:Map[A,com.stripe.rainier.core.Generator[R]]", "kind" : "val"}, {"label" : "actions", "tail" : "(): Set[A]", "member" : "io.samritchie.rl.State.actions", "link" : "io\/samritchie\/rl\/state\/Bandit.html#actions:Set[A]", "kind" : "def"}, {"label" : "act", "tail" : "(action: A): Option[Generator[(R, State[A, R])]]", "member" : "io.samritchie.rl.State.act", "link" : "io\/samritchie\/rl\/state\/Bandit.html#act(action:A):Option[com.stripe.rainier.core.Generator[(Reward,io.samritchie.rl.State[A,Reward])]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/state\/Bandit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/state\/Bandit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/state\/Bandit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/state\/Bandit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/state\/Bandit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/state\/Bandit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/state\/Bandit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/state\/Bandit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/state\/Bandit.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/state\/Bandit.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/state\/Bandit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/state\/Bandit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/state\/Bandit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/state\/Bandit.html", "kind" : "case class"}], "io.samritchie.rl.staging" : [{"name" : "io.samritchie.rl.staging.Graph", "shortDescription" : "There is some set of possible places you can get from a givenstate.", "members_case class" : [{"member" : "io.samritchie.rl.staging.Graph#<init>", "error" : "unsupported entity"}, {"label" : "actions", "tail" : ": Set[State[A, Reward]]", "member" : "io.samritchie.rl.staging.Graph.actions", "link" : "io\/samritchie\/rl\/staging\/Graph.html#actions:Set[io.samritchie.rl.State[A,Reward]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/staging\/Graph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/staging\/Graph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/staging\/Graph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/staging\/Graph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/staging\/Graph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/staging\/Graph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/staging\/Graph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/staging\/Graph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/staging\/Graph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/staging\/Graph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/staging\/Graph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/staging\/Graph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/staging\/Graph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/staging\/Graph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/staging\/Graph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/staging\/Graph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/staging\/Graph.html", "kind" : "case class"}], "io.samritchie.connectfour" : [{"name" : "io.samritchie.connectfour.Game", "shortDescription" : "This object implements the game logic for Connect Four.", "object" : "io\/samritchie\/connectfour\/Game$.html", "members_object" : [{"label" : "Board", "tail" : "", "member" : "io.samritchie.connectfour.Game.Board", "link" : "io\/samritchie\/connectfour\/Game$.html#Board", "kind" : "object"}, {"label" : "Board", "tail" : "", "member" : "io.samritchie.connectfour.Game.Board", "link" : "io\/samritchie\/connectfour\/Game$.html#BoardextendsAnyRef", "kind" : "class"}, {"label" : "Move", "tail" : "", "member" : "io.samritchie.connectfour.Game.Move", "link" : "io\/samritchie\/connectfour\/Game$.html#MoveextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Color", "tail" : "", "member" : "io.samritchie.connectfour.Game.Color", "link" : "io\/samritchie\/connectfour\/Game$.html#Color", "kind" : "object"}, {"label" : "Black", "tail" : "", "member" : "io.samritchie.connectfour.Game.Black", "link" : "io\/samritchie\/connectfour\/Game$.html#Black", "kind" : "object"}, {"label" : "Red", "tail" : "", "member" : "io.samritchie.connectfour.Game.Red", "link" : "io\/samritchie\/connectfour\/Game$.html#Red", "kind" : "object"}, {"label" : "Color", "tail" : "", "member" : "io.samritchie.connectfour.Game.Color", "link" : "io\/samritchie\/connectfour\/Game$.html#ColorextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Column", "tail" : "", "member" : "io.samritchie.connectfour.Game.Column", "link" : "io\/samritchie\/connectfour\/Game$.html#Column=Int", "kind" : "type"}, {"label" : "Row", "tail" : "", "member" : "io.samritchie.connectfour.Game.Row", "link" : "io\/samritchie\/connectfour\/Game$.html#Row=Int", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/connectfour\/Game$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/connectfour\/Game$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/connectfour\/Game$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/connectfour\/Game$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/connectfour\/Game$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/connectfour\/Game$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/connectfour\/Game$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/Game$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/Game$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/Game$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/connectfour\/Game$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/connectfour\/Game$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/connectfour\/Game$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/connectfour\/Game$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/connectfour\/Game$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/connectfour\/Game$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/connectfour\/Game$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/connectfour\/Game$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/connectfour\/Game$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.samritchie.connectfour.IO", "shortDescription" : "", "object" : "io\/samritchie\/connectfour\/IO$.html", "members_object" : [{"label" : "main", "tail" : "(items: Array[String]): Unit", "member" : "io.samritchie.connectfour.IO.main", "link" : "io\/samritchie\/connectfour\/IO$.html#main(items:Array[String]):Unit", "kind" : "def"}, {"label" : "gameLoop", "tail" : "(board: Board, turnColor: Color): Unit", "member" : "io.samritchie.connectfour.IO.gameLoop", "link" : "io\/samritchie\/connectfour\/IO$.html#gameLoop(board:io.samritchie.connectfour.Game.Board,turnColor:io.samritchie.connectfour.Game.Color):Unit", "kind" : "def"}, {"label" : "turn", "tail" : "(board: Board, turnColor: Color): Try[(Board, Position)]", "member" : "io.samritchie.connectfour.IO.turn", "link" : "io\/samritchie\/connectfour\/IO$.html#turn(board:io.samritchie.connectfour.Game.Board,turnColor:io.samritchie.connectfour.Game.Color):scala.util.Try[(io.samritchie.connectfour.Game.Board,io.samritchie.connectfour.Game.Board.Position)]", "kind" : "def"}, {"label" : "printBoardState", "tail" : "(board: Board): Unit", "member" : "io.samritchie.connectfour.IO.printBoardState", "link" : "io\/samritchie\/connectfour\/IO$.html#printBoardState(board:io.samritchie.connectfour.Game.Board):Unit", "kind" : "def"}, {"label" : "initialColor", "tail" : "(): Color", "member" : "io.samritchie.connectfour.IO.initialColor", "link" : "io\/samritchie\/connectfour\/IO$.html#initialColor:io.samritchie.connectfour.Game.Color", "kind" : "def"}, {"label" : "getColumn", "tail" : "(color: Color): Column", "member" : "io.samritchie.connectfour.IO.getColumn", "link" : "io\/samritchie\/connectfour\/IO$.html#getColumn(color:io.samritchie.connectfour.Game.Color):io.samritchie.connectfour.Game.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/connectfour\/IO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/connectfour\/IO$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/connectfour\/IO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/connectfour\/IO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/connectfour\/IO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/connectfour\/IO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/connectfour\/IO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/IO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/IO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/IO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/connectfour\/IO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/connectfour\/IO$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/connectfour\/IO$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/connectfour\/IO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/connectfour\/IO$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/connectfour\/IO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/connectfour\/IO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/connectfour\/IO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/connectfour\/IO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.samritchie.rl.policy" : [{"name" : "io.samritchie.rl.policy.EpsilonGreedy", "shortDescription" : "This is a version that accumulates the reward using a monoid.", "object" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html", "members_object" : [{"label" : "incremental", "tail" : "(epsilon: Double, initial: Double): EpsilonGreedy[A, Double, AveragedValue]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.incremental", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#incremental[A](epsilon:Double,initial:Double):io.samritchie.rl.policy.EpsilonGreedy[A,Double,com.twitter.algebird.AveragedValue]", "kind" : "def"}, {"label" : "policy", "tail" : "(epsilon: Double, agg: MonoidAggregator[R, T, R], initial: R)(arg0: Ordering[R]): EpsilonGreedy[A, R, T]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.policy", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#policy[A,R,T](epsilon:Double,agg:com.twitter.algebird.MonoidAggregator[R,T,R],initial:R)(implicitevidence$3:Ordering[R]):io.samritchie.rl.policy.EpsilonGreedy[A,R,T]", "kind" : "def"}, {"label" : "policy", "tail" : "(epsilon: Double, agg: MonoidAggregator[R, T, R])(arg0: Ordering[R]): EpsilonGreedy[A, R, T]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.policy", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#policy[A,R,T](epsilon:Double,agg:com.twitter.algebird.MonoidAggregator[R,T,R])(implicitevidence$2:Ordering[R]):io.samritchie.rl.policy.EpsilonGreedy[A,R,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "learn", "tail" : "(state: State[A, R], action: A, reward: R): EpsilonGreedy[A, R, T]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.learn", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#learn(state:io.samritchie.rl.State[A,R],action:A,reward:R):io.samritchie.rl.policy.EpsilonGreedy[A,R,T]", "kind" : "def"}, {"label" : "choose", "tail" : "(state: State[A, R]): Generator[A]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.choose", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#choose(state:io.samritchie.rl.State[A,R]):com.stripe.rainier.core.Generator[A]", "kind" : "def"}, {"member" : "io.samritchie.rl.policy.EpsilonGreedy#<init>", "error" : "unsupported entity"}, {"label" : "aggState", "tail" : ": Map[A, T]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.aggState", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#aggState:Map[A,T]", "kind" : "val"}, {"label" : "agg", "tail" : ": MonoidAggregator[R, T, R]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.agg", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#agg:com.twitter.algebird.MonoidAggregator[R,T,R]", "kind" : "val"}, {"label" : "epsilon", "tail" : ": Double", "member" : "io.samritchie.rl.policy.EpsilonGreedy.epsilon", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#epsilon:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html", "kind" : "case class"}, {"name" : "io.samritchie.rl.policy.Instrumented", "shortDescription" : "TODO...", "members_case class" : [{"label" : "learn", "tail" : "(state: State[A, R], action: A, reward: R): Instrumented[A, R, P]", "member" : "io.samritchie.rl.policy.Instrumented.learn", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#learn(state:io.samritchie.rl.State[A,R],action:A,reward:R):io.samritchie.rl.policy.Instrumented[A,R,P]", "kind" : "def"}, {"label" : "choose", "tail" : "(state: State[A, R]): Generator[A]", "member" : "io.samritchie.rl.policy.Instrumented.choose", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#choose(state:io.samritchie.rl.State[A,R]):com.stripe.rainier.core.Generator[A]", "kind" : "def"}, {"member" : "io.samritchie.rl.policy.Instrumented#<init>", "error" : "unsupported entity"}, {"label" : "acc", "tail" : ": Map[A, List[R]]", "member" : "io.samritchie.rl.policy.Instrumented.acc", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#acc:Map[A,List[R]]", "kind" : "val"}, {"label" : "f", "tail" : ": (P) ⇒ Map[A, R]", "member" : "io.samritchie.rl.policy.Instrumented.f", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#f:P=>Map[A,R]", "kind" : "val"}, {"label" : "policy", "tail" : ": P", "member" : "io.samritchie.rl.policy.Instrumented.policy", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#policy:P", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Instrumented.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/policy\/Instrumented.html", "kind" : "case class"}, {"name" : "io.samritchie.rl.policy.Random", "shortDescription" : "Totally bullshit random policy.", "object" : "io\/samritchie\/rl\/policy\/Random$.html", "members_object" : [{"label" : "uniform", "tail" : "(): Random[A, R]", "member" : "io.samritchie.rl.policy.Random.uniform", "link" : "io\/samritchie\/rl\/policy\/Random$.html#uniform[A,R]:io.samritchie.rl.policy.Random[A,R]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/Random$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/Random$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/Random$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/Random$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/Random$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/Random$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/Random$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/Random$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/Random$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/policy\/Random$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/Random$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/policy\/Random$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/policy\/Random$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/Random$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Random$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Random$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "learn", "tail" : "(state: State[A, R], action: A, reward: R): Random[A, R]", "member" : "io.samritchie.rl.policy.Random.learn", "link" : "io\/samritchie\/rl\/policy\/Random.html#learn(state:io.samritchie.rl.State[A,R],action:A,reward:R):io.samritchie.rl.policy.Random[A,R]", "kind" : "def"}, {"label" : "choose", "tail" : "(state: State[A, R]): Generator[A]", "member" : "io.samritchie.rl.policy.Random.choose", "link" : "io\/samritchie\/rl\/policy\/Random.html#choose(state:io.samritchie.rl.State[A,R]):com.stripe.rainier.core.Generator[A]", "kind" : "def"}, {"member" : "io.samritchie.rl.policy.Random#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/Random.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/Random.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/Random.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/Random.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/Random.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/Random.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/Random.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/Random.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/Random.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/Random.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/Random.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Random.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Random.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/policy\/Random.html", "kind" : "case class"}], "io.samritchie.rl" : [{"name" : "io.samritchie.rl.Decider", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Decider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Decider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Decider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Decider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Decider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Decider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Decider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Decider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Decider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Decider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Decider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Decider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Decider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Decider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Decider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Decider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Decider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Decider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Decider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "choose", "tail" : "(state: State[A, R]): M[A]", "member" : "io.samritchie.rl.Decider.choose", "link" : "io\/samritchie\/rl\/Decider.html#choose(state:io.samritchie.rl.State[A,R]):M[A]", "kind" : "abstract def"}], "shortDescription" : "Trait for things that can choose some Monadic result.", "trait" : "io\/samritchie\/rl\/Decider.html", "kind" : "trait"}, {"name" : "io.samritchie.rl.Game", "shortDescription" : "Playing the game, currently.", "object" : "io\/samritchie\/rl\/Game$.html", "members_object" : [{"label" : "main", "tail" : "(items: Array[String]): Unit", "member" : "io.samritchie.rl.Game.main", "link" : "io\/samritchie\/rl\/Game$.html#main(items:Array[String]):Unit", "kind" : "def"}, {"label" : "playAndPrintOnce", "tail" : "(nRuns: Int, timeSteps: Int): Map[Arm, List[Double]]", "member" : "io.samritchie.rl.Game.playAndPrintOnce", "link" : "io\/samritchie\/rl\/Game$.html#playAndPrintOnce(nRuns:Int,timeSteps:Int):Map[io.samritchie.rl.state.Bandit.Arm,List[Double]]", "kind" : "def"}, {"label" : "playBandit", "tail" : "(nRuns: Int, timeSteps: Int): Generator[List[(IEG, State[Arm, Double])]]", "member" : "io.samritchie.rl.Game.playBandit", "link" : "io\/samritchie\/rl\/Game$.html#playBandit(nRuns:Int,timeSteps:Int):com.stripe.rainier.core.Generator[List[(io.samritchie.rl.Game.IEG,io.samritchie.rl.State[io.samritchie.rl.state.Bandit.Arm,Double])]]", "kind" : "def"}, {"label" : "IEG", "tail" : "", "member" : "io.samritchie.rl.Game.IEG", "link" : "io\/samritchie\/rl\/Game$.html#IEG=io.samritchie.rl.policy.Instrumented[io.samritchie.rl.state.Bandit.Arm,Double,io.samritchie.rl.Game.EG]", "kind" : "type"}, {"label" : "EG", "tail" : "", "member" : "io.samritchie.rl.Game.EG", "link" : "io\/samritchie\/rl\/Game$.html#EG=io.samritchie.rl.policy.EpsilonGreedy[io.samritchie.rl.state.Bandit.Arm,Double,com.twitter.algebird.AveragedValue]", "kind" : "type"}, {"label" : "policy", "tail" : ": Instrumented[Arm, Double, EpsilonGreedy[Arm, Double, AveragedValue]]", "member" : "io.samritchie.rl.Game.policy", "link" : "io\/samritchie\/rl\/Game$.html#policy:io.samritchie.rl.policy.Instrumented[io.samritchie.rl.state.Bandit.Arm,Double,io.samritchie.rl.policy.EpsilonGreedy[io.samritchie.rl.state.Bandit.Arm,Double,com.twitter.algebird.AveragedValue]]", "kind" : "val"}, {"label" : "stateGen", "tail" : ": Generator[Bandit[Arm, Double]]", "member" : "io.samritchie.rl.Game.stateGen", "link" : "io\/samritchie\/rl\/Game$.html#stateGen:com.stripe.rainier.core.Generator[io.samritchie.rl.state.Bandit[io.samritchie.rl.state.Bandit.Arm,Double]]", "kind" : "val"}, {"label" : "evaluator", "tail" : ": Numeric[Real]", "member" : "io.samritchie.rl.Game.evaluator", "link" : "io\/samritchie\/rl\/Game$.html#evaluator:Numeric[com.stripe.rainier.compute.Real]", "kind" : "implicit val"}, {"label" : "rng", "tail" : ": RNG", "member" : "io.samritchie.rl.Game.rng", "link" : "io\/samritchie\/rl\/Game$.html#rng:com.stripe.rainier.sampler.RNG", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Game$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Game$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Game$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Game$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Game$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Game$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Game$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Game$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Game$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Game$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Game$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Game$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Game$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Game$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Game$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Game$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Game$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Game$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Game$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.samritchie.rl.Learner", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Learner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Learner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Learner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Learner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Learner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Learner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Learner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Learner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Learner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Learner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Learner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Learner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Learner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Learner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Learner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Learner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Learner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Learner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Learner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "learn", "tail" : "(state: State[A, R], action: A, reward: R): This", "member" : "io.samritchie.rl.Learner.learn", "link" : "io\/samritchie\/rl\/Learner.html#learn(state:io.samritchie.rl.State[A,R],action:A,reward:R):This", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/samritchie\/rl\/Learner.html", "kind" : "trait"}, {"name" : "io.samritchie.rl.Plot", "shortDescription" : "", "object" : "io\/samritchie\/rl\/Plot$.html", "members_object" : [{"label" : "main", "tail" : "(items: Array[String]): Unit", "member" : "io.samritchie.rl.Plot.main", "link" : "io\/samritchie\/rl\/Plot$.html#main(items:Array[String]):Unit", "kind" : "def"}, {"label" : "polyPlot", "tail" : "(): Unit", "member" : "io.samritchie.rl.Plot.polyPlot", "link" : "io\/samritchie\/rl\/Plot$.html#polyPlot():Unit", "kind" : "def"}, {"label" : "lineChart", "tail" : "(): Unit", "member" : "io.samritchie.rl.Plot.lineChart", "link" : "io\/samritchie\/rl\/Plot$.html#lineChart():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Plot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Plot$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Plot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Plot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Plot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Plot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Plot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Plot$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Plot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Plot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Plot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Plot$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Plot$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Plot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Plot$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Plot$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Plot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Plot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Plot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.samritchie.rl.Policy", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Policy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Policy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Policy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Policy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Policy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Policy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Policy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Policy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Policy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Policy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Policy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Policy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Policy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Policy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Policy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Policy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "choose", "tail" : "(state: State[A, R]): Generator[A]", "member" : "io.samritchie.rl.Decider.choose", "link" : "io\/samritchie\/rl\/Policy.html#choose(state:io.samritchie.rl.State[A,R]):M[A]", "kind" : "abstract def"}, {"label" : "learn", "tail" : "(state: State[A, R], action: A, reward: R): This", "member" : "io.samritchie.rl.Learner.learn", "link" : "io\/samritchie\/rl\/Policy.html#learn(state:io.samritchie.rl.State[A,R],action:A,reward:R):This", "kind" : "abstract def"}], "shortDescription" : "This is how agents actually choose what comes next.", "object" : "io\/samritchie\/rl\/Policy$.html", "members_object" : [{"label" : "playN", "tail" : "(policy: P, state: State[A, R], penalty: R, nTimes: Int): Generator[(P, State[A, R])]", "member" : "io.samritchie.rl.Policy.playN", "link" : "io\/samritchie\/rl\/Policy$.html#playN[A,R,P<:io.samritchie.rl.Policy[A,R,P]](policy:P,state:io.samritchie.rl.State[A,R],penalty:R,nTimes:Int):com.stripe.rainier.core.Generator[(P,io.samritchie.rl.State[A,R])]", "kind" : "def"}, {"label" : "play", "tail" : "(policy: P, state: State[A, R], penalty: R): Generator[(P, State[A, R])]", "member" : "io.samritchie.rl.Policy.play", "link" : "io\/samritchie\/rl\/Policy$.html#play[A,R,P<:io.samritchie.rl.Policy[A,R,P]](policy:P,state:io.samritchie.rl.State[A,R],penalty:R):com.stripe.rainier.core.Generator[(P,io.samritchie.rl.State[A,R])]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Policy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Policy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Policy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Policy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Policy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Policy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Policy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Policy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Policy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Policy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Policy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Policy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Policy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Policy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Policy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Policy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/samritchie\/rl\/Policy.html", "kind" : "trait"}, {"name" : "io.samritchie.rl.State", "members_trait" : [{"label" : "actions", "tail" : "(): Set[A]", "member" : "io.samritchie.rl.State.actions", "link" : "io\/samritchie\/rl\/State.html#actions:Set[A]", "kind" : "def"}, {"label" : "act", "tail" : "(action: A): Option[Generator[(Reward, State[A, Reward])]]", "member" : "io.samritchie.rl.State.act", "link" : "io\/samritchie\/rl\/State.html#act(action:A):Option[com.stripe.rainier.core.Generator[(Reward,io.samritchie.rl.State[A,Reward])]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/State.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/State.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/State.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/State.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/State.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/State.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/State.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/State.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/State.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/State.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/State.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/State.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/State.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/State.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/State.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/State.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dynamics", "tail" : "(): Map[A, Generator[(Reward, State[A, Reward])]]", "member" : "io.samritchie.rl.State.dynamics", "link" : "io\/samritchie\/rl\/State.html#dynamics:Map[A,com.stripe.rainier.core.Generator[(Reward,io.samritchie.rl.State[A,Reward])]]", "kind" : "abstract def"}], "shortDescription" : "A world should probably have a generator of states andactions...", "object" : "io\/samritchie\/rl\/State$.html", "members_object" : [{"label" : "fromMap", "tail" : "(dynamics: Map[A, Generator[(R, State[A, R])]]): MapState[A, R]", "member" : "io.samritchie.rl.State.fromMap", "link" : "io\/samritchie\/rl\/State$.html#fromMap[A,R](dynamics:Map[A,com.stripe.rainier.core.Generator[(R,io.samritchie.rl.State[A,R])]]):io.samritchie.rl.State.MapState[A,R]", "kind" : "def"}, {"label" : "MapState", "tail" : "", "member" : "io.samritchie.rl.State.MapState", "link" : "io\/samritchie\/rl\/State$.html#MapState[A,R]extendsState[A,R]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/State$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/State$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/State$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/State$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/State$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/State$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/State$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/State$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/State$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/State$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/State$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/State$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/State$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/State$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/State$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/State$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/samritchie\/rl\/State.html", "kind" : "trait"}, {"name" : "io.samritchie.rl.StochasticDecider", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/StochasticDecider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/StochasticDecider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/StochasticDecider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/StochasticDecider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/StochasticDecider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/StochasticDecider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/StochasticDecider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/StochasticDecider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/StochasticDecider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/StochasticDecider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/StochasticDecider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/StochasticDecider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/StochasticDecider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/StochasticDecider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/StochasticDecider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/StochasticDecider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/StochasticDecider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/StochasticDecider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/StochasticDecider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "choose", "tail" : "(state: State[A, R]): Generator[A]", "member" : "io.samritchie.rl.Decider.choose", "link" : "io\/samritchie\/rl\/StochasticDecider.html#choose(state:io.samritchie.rl.State[A,R]):M[A]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/samritchie\/rl\/StochasticDecider.html", "kind" : "trait"}, {"name" : "io.samritchie.rl.Util", "shortDescription" : "", "object" : "io\/samritchie\/rl\/Util$.html", "members_object" : [{"label" : "averagingAgg", "tail" : "(): MonoidAggregator[Double, AveragedValue, Double]", "member" : "io.samritchie.rl.Util.averagingAgg", "link" : "io\/samritchie\/rl\/Util$.html#averagingAgg:com.twitter.algebird.MonoidAggregator[Double,com.twitter.algebird.AveragedValue,Double]", "kind" : "def"}, {"label" : "epsilonGreedy", "tail" : "(epsilon: Double, optGreedy: Option[A], other: Set[A]): Categorical[A]", "member" : "io.samritchie.rl.Util.epsilonGreedy", "link" : "io\/samritchie\/rl\/Util$.html#epsilonGreedy[A](epsilon:Double,optGreedy:Option[A],other:Set[A]):com.stripe.rainier.core.Categorical[A]", "kind" : "def"}, {"label" : "iterateM", "tail" : "(n: Int)(a: A)(f: (A) ⇒ F[A])(arg0: Monad[F]): F[A]", "member" : "io.samritchie.rl.Util.iterateM", "link" : "io\/samritchie\/rl\/Util$.html#iterateM[F[_],A](n:Int)(a:A)(f:A=>F[A])(implicitevidence$1:cats.Monad[F]):F[A]", "kind" : "def"}, {"label" : "Instances", "tail" : "", "member" : "io.samritchie.rl.Util.Instances", "link" : "io\/samritchie\/rl\/Util$.html#Instances", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Util$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Util$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Util$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Util$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Util$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Util$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Util$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Util$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Util$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Util$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Util$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Util$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Util$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Util$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Util$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Util$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Util$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Util$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Util$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.samritchie.rl.ValueFunction", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/ValueFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/ValueFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/ValueFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/ValueFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/ValueFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/ValueFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/ValueFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/ValueFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/ValueFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/ValueFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/ValueFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/ValueFunction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/ValueFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/ValueFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/ValueFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/ValueFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "io\/samritchie\/rl\/ValueFunction$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/ValueFunction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/ValueFunction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/ValueFunction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/ValueFunction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/ValueFunction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/ValueFunction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/ValueFunction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/ValueFunction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/ValueFunction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/ValueFunction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/ValueFunction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/ValueFunction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/ValueFunction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/ValueFunction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/ValueFunction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/ValueFunction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/samritchie\/rl\/ValueFunction.html", "kind" : "object"}], "io" : [], "io.samritchie" : []};