Index.PACKAGES = {"io.samritchie.rl.state" : [{"name" : "io.samritchie.rl.state.Bandit", "shortDescription" : "MDP with a single state.", "object" : "io\/samritchie\/rl\/state\/Bandit$.html", "members_object" : [{"label" : "initialStateGen", "tail" : "(k: Int, meanGenerator: Generator[Double], stdDev: Double): Generator[Bandit[Arm, Double]]", "member" : "io.samritchie.rl.state.Bandit.initialStateGen", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#initialStateGen(k:Int,meanGenerator:com.stripe.rainier.core.Generator[Double],stdDev:Double):com.stripe.rainier.core.Generator[io.samritchie.rl.state.Bandit[io.samritchie.rl.state.Bandit.Arm,Double]]", "kind" : "def"}, {"label" : "arms", "tail" : "(k: Int): Set[Arm]", "member" : "io.samritchie.rl.state.Bandit.arms", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#arms(k:Int):Set[io.samritchie.rl.state.Bandit.Arm]", "kind" : "def"}, {"label" : "Arm", "tail" : "", "member" : "io.samritchie.rl.state.Bandit.Arm", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#ArmextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Arm", "tail" : "", "member" : "io.samritchie.rl.state.Bandit.Arm", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#Arm", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/state\/Bandit$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/state\/Bandit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "dynamics", "tail" : "(): Map[A, Generator[(R, State[A, R])]]", "member" : "io.samritchie.rl.state.Bandit.dynamics", "link" : "io\/samritchie\/rl\/state\/Bandit.html#dynamics:scala.collection.immutable.Map[A,com.stripe.rainier.core.Generator[(R,io.samritchie.rl.State[A,R])]]", "kind" : "def"}, {"member" : "io.samritchie.rl.state.Bandit#<init>", "error" : "unsupported entity"}, {"label" : "rewards", "tail" : ": Map[A, Generator[R]]", "member" : "io.samritchie.rl.state.Bandit.rewards", "link" : "io\/samritchie\/rl\/state\/Bandit.html#rewards:Map[A,com.stripe.rainier.core.Generator[R]]", "kind" : "val"}, {"label" : "actions", "tail" : "(): Set[A]", "member" : "io.samritchie.rl.State.actions", "link" : "io\/samritchie\/rl\/state\/Bandit.html#actions:Set[A]", "kind" : "def"}, {"label" : "act", "tail" : "(action: A): Option[Generator[(R, State[A, R])]]", "member" : "io.samritchie.rl.State.act", "link" : "io\/samritchie\/rl\/state\/Bandit.html#act(action:A):Option[com.stripe.rainier.core.Generator[(Reward,io.samritchie.rl.State[A,Reward])]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/state\/Bandit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/state\/Bandit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/state\/Bandit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/state\/Bandit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/state\/Bandit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/state\/Bandit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/state\/Bandit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/state\/Bandit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/state\/Bandit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/state\/Bandit.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/state\/Bandit.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/state\/Bandit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/state\/Bandit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/state\/Bandit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/state\/Bandit.html", "kind" : "case class"}], "io.samritchie.rl.staging" : [{"name" : "io.samritchie.rl.staging.Graph", "shortDescription" : "There is some set of possible places you can get from a givenstate.", "members_case class" : [{"member" : "io.samritchie.rl.staging.Graph#<init>", "error" : "unsupported entity"}, {"label" : "actions", "tail" : ": Set[State[A, Reward]]", "member" : "io.samritchie.rl.staging.Graph.actions", "link" : "io\/samritchie\/rl\/staging\/Graph.html#actions:Set[io.samritchie.rl.State[A,Reward]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/staging\/Graph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/staging\/Graph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/staging\/Graph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/staging\/Graph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/staging\/Graph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/staging\/Graph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/staging\/Graph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/staging\/Graph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/staging\/Graph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/staging\/Graph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/staging\/Graph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/staging\/Graph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/staging\/Graph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/staging\/Graph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/staging\/Graph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/staging\/Graph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/staging\/Graph.html", "kind" : "case class"}], "io.samritchie.connectfour" : [{"name" : "io.samritchie.connectfour.Game", "shortDescription" : "This object implements the game logic for Connect Four.", "object" : "io\/samritchie\/connectfour\/Game$.html", "members_object" : [{"label" : "Board", "tail" : "", "member" : "io.samritchie.connectfour.Game.Board", "link" : "io\/samritchie\/connectfour\/Game$.html#Board", "kind" : "object"}, {"label" : "Board", "tail" : "", "member" : "io.samritchie.connectfour.Game.Board", "link" : "io\/samritchie\/connectfour\/Game$.html#BoardextendsAnyRef", "kind" : "class"}, {"label" : "Move", "tail" : "", "member" : "io.samritchie.connectfour.Game.Move", "link" : "io\/samritchie\/connectfour\/Game$.html#MoveextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Color", "tail" : "", "member" : "io.samritchie.connectfour.Game.Color", "link" : "io\/samritchie\/connectfour\/Game$.html#Color", "kind" : "object"}, {"label" : "Black", "tail" : "", "member" : "io.samritchie.connectfour.Game.Black", "link" : "io\/samritchie\/connectfour\/Game$.html#Black", "kind" : "object"}, {"label" : "Red", "tail" : "", "member" : "io.samritchie.connectfour.Game.Red", "link" : "io\/samritchie\/connectfour\/Game$.html#Red", "kind" : "object"}, {"label" : "Color", "tail" : "", "member" : "io.samritchie.connectfour.Game.Color", "link" : "io\/samritchie\/connectfour\/Game$.html#ColorextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Column", "tail" : "", "member" : "io.samritchie.connectfour.Game.Column", "link" : "io\/samritchie\/connectfour\/Game$.html#Column=Int", "kind" : "type"}, {"label" : "Row", "tail" : "", "member" : "io.samritchie.connectfour.Game.Row", "link" : "io\/samritchie\/connectfour\/Game$.html#Row=Int", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/connectfour\/Game$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/connectfour\/Game$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/connectfour\/Game$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/connectfour\/Game$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/connectfour\/Game$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/connectfour\/Game$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/connectfour\/Game$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/Game$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/Game$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/Game$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/connectfour\/Game$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/connectfour\/Game$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/connectfour\/Game$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/connectfour\/Game$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/connectfour\/Game$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/connectfour\/Game$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/connectfour\/Game$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/connectfour\/Game$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/connectfour\/Game$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.samritchie.connectfour.IO", "shortDescription" : "", "object" : "io\/samritchie\/connectfour\/IO$.html", "members_object" : [{"label" : "main", "tail" : "(items: Array[String]): Unit", "member" : "io.samritchie.connectfour.IO.main", "link" : "io\/samritchie\/connectfour\/IO$.html#main(items:Array[String]):Unit", "kind" : "def"}, {"label" : "gameLoop", "tail" : "(board: Board, turnColor: Color): Unit", "member" : "io.samritchie.connectfour.IO.gameLoop", "link" : "io\/samritchie\/connectfour\/IO$.html#gameLoop(board:io.samritchie.connectfour.Game.Board,turnColor:io.samritchie.connectfour.Game.Color):Unit", "kind" : "def"}, {"label" : "turn", "tail" : "(board: Board, turnColor: Color): Try[(Board, Position)]", "member" : "io.samritchie.connectfour.IO.turn", "link" : "io\/samritchie\/connectfour\/IO$.html#turn(board:io.samritchie.connectfour.Game.Board,turnColor:io.samritchie.connectfour.Game.Color):scala.util.Try[(io.samritchie.connectfour.Game.Board,io.samritchie.connectfour.Game.Board.Position)]", "kind" : "def"}, {"label" : "printBoardState", "tail" : "(board: Board): Unit", "member" : "io.samritchie.connectfour.IO.printBoardState", "link" : "io\/samritchie\/connectfour\/IO$.html#printBoardState(board:io.samritchie.connectfour.Game.Board):Unit", "kind" : "def"}, {"label" : "initialColor", "tail" : "(): Color", "member" : "io.samritchie.connectfour.IO.initialColor", "link" : "io\/samritchie\/connectfour\/IO$.html#initialColor:io.samritchie.connectfour.Game.Color", "kind" : "def"}, {"label" : "getColumn", "tail" : "(color: Color): Column", "member" : "io.samritchie.connectfour.IO.getColumn", "link" : "io\/samritchie\/connectfour\/IO$.html#getColumn(color:io.samritchie.connectfour.Game.Color):io.samritchie.connectfour.Game.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/connectfour\/IO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/connectfour\/IO$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/connectfour\/IO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/connectfour\/IO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/connectfour\/IO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/connectfour\/IO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/connectfour\/IO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/IO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/IO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/connectfour\/IO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/connectfour\/IO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/connectfour\/IO$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/connectfour\/IO$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/connectfour\/IO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/connectfour\/IO$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/connectfour\/IO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/connectfour\/IO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/connectfour\/IO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/connectfour\/IO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.samritchie.rl.util" : [{"name" : "io.samritchie.rl.util.ConstantStep", "shortDescription" : "Exponential recency-weighted average.", "object" : "io\/samritchie\/rl\/util\/ConstantStep$.html", "members_object" : [{"label" : "monoid", "tail" : "(alpha: Alpha, eps: Epsilon): Monoid[ConstantStep]", "member" : "io.samritchie.rl.util.ConstantStep.monoid", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#monoid(alpha:io.samritchie.rl.util.ConstantStep.Alpha,eps:io.samritchie.rl.util.ConstantStep.Epsilon):com.twitter.algebird.Monoid[io.samritchie.rl.util.ConstantStep]", "kind" : "def"}, {"label" : "buildReward", "tail" : "(reward: T, alpha: Alpha, time: Time)(num: Numeric[T]): ConstantStep", "member" : "io.samritchie.rl.util.ConstantStep.buildReward", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#buildReward[T](reward:T,alpha:io.samritchie.rl.util.ConstantStep.Alpha,time:io.samritchie.rl.Time)(implicitnum:Numeric[T]):io.samritchie.rl.util.ConstantStep", "kind" : "def"}, {"label" : "buildAggregate", "tail" : "(value: T, time: Time)(num: Numeric[T]): ConstantStep", "member" : "io.samritchie.rl.util.ConstantStep.buildAggregate", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#buildAggregate[T](value:T,time:io.samritchie.rl.Time)(implicitnum:Numeric[T]):io.samritchie.rl.util.ConstantStep", "kind" : "def"}, {"label" : "buildAggregate", "tail" : "(value: T)(num: Numeric[T]): ConstantStep", "member" : "io.samritchie.rl.util.ConstantStep.buildAggregate", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#buildAggregate[T](value:T)(implicitnum:Numeric[T]):io.samritchie.rl.util.ConstantStep", "kind" : "def"}, {"label" : "zero", "tail" : ": ConstantStep", "member" : "io.samritchie.rl.util.ConstantStep.zero", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#zero:io.samritchie.rl.util.ConstantStep", "kind" : "val"}, {"label" : "Epsilon", "tail" : "", "member" : "io.samritchie.rl.util.ConstantStep.Epsilon", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#EpsilonextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Alpha", "tail" : "", "member" : "io.samritchie.rl.util.ConstantStep.Alpha", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#AlphaextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/util\/ConstantStep$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "decayTo", "tail" : "(t2: Time, alpha: Alpha, eps: Epsilon): ConstantStep", "member" : "io.samritchie.rl.util.ConstantStep.decayTo", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#decayTo(t2:io.samritchie.rl.Time,alpha:io.samritchie.rl.util.ConstantStep.Alpha,eps:io.samritchie.rl.util.ConstantStep.Epsilon):io.samritchie.rl.util.ConstantStep", "kind" : "def"}, {"label" : "compare", "tail" : "(that: ConstantStep): Int", "member" : "io.samritchie.rl.util.ConstantStep.compare", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#compare(that:io.samritchie.rl.util.ConstantStep):Int", "kind" : "def"}, {"member" : "io.samritchie.rl.util.ConstantStep#<init>", "error" : "unsupported entity"}, {"label" : "time", "tail" : ": Time", "member" : "io.samritchie.rl.util.ConstantStep.time", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#time:io.samritchie.rl.Time", "kind" : "val"}, {"label" : "value", "tail" : ": Double", "member" : "io.samritchie.rl.util.ConstantStep.value", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#value:Double", "kind" : "val"}, {"label" : "compareTo", "tail" : "(that: ConstantStep): Int", "member" : "scala.math.Ordered.compareTo", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: ConstantStep): Boolean", "member" : "scala.math.Ordered.>=", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: ConstantStep): Boolean", "member" : "scala.math.Ordered.<=", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: ConstantStep): Boolean", "member" : "scala.math.Ordered.>", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: ConstantStep): Boolean", "member" : "scala.math.Ordered.<", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/util\/ConstantStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/util\/ConstantStep.html", "kind" : "case class"}, {"name" : "io.samritchie.rl.util.ConstantStepMonoid", "shortDescription" : "", "members_case class" : [{"label" : "reward", "tail" : "(v: ConstantStep, reward: Double, time: Time): ConstantStep", "member" : "io.samritchie.rl.util.ConstantStepMonoid.reward", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#reward(v:io.samritchie.rl.util.ConstantStep,reward:Double,time:io.samritchie.rl.Time):io.samritchie.rl.util.ConstantStep", "kind" : "def"}, {"label" : "valueAsOf", "tail" : "(v: ConstantStep, time: Time): Double", "member" : "io.samritchie.rl.util.ConstantStepMonoid.valueAsOf", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#valueAsOf(v:io.samritchie.rl.util.ConstantStep,time:io.samritchie.rl.Time):Double", "kind" : "def"}, {"label" : "plus", "tail" : "(l: ConstantStep, r: ConstantStep): ConstantStep", "member" : "io.samritchie.rl.util.ConstantStepMonoid.plus", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#plus(l:io.samritchie.rl.util.ConstantStep,r:io.samritchie.rl.util.ConstantStep):io.samritchie.rl.util.ConstantStep", "kind" : "def"}, {"label" : "isNonZero", "tail" : "(cs: ConstantStep): Boolean", "member" : "io.samritchie.rl.util.ConstantStepMonoid.isNonZero", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#isNonZero(cs:io.samritchie.rl.util.ConstantStep):Boolean", "kind" : "def"}, {"label" : "zero", "tail" : ": ConstantStep", "member" : "io.samritchie.rl.util.ConstantStepMonoid.zero", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#zero:io.samritchie.rl.util.ConstantStep", "kind" : "val"}, {"member" : "io.samritchie.rl.util.ConstantStepMonoid#<init>", "error" : "unsupported entity"}, {"label" : "eps", "tail" : ": Epsilon", "member" : "io.samritchie.rl.util.ConstantStepMonoid.eps", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#eps:io.samritchie.rl.util.ConstantStep.Epsilon", "kind" : "val"}, {"label" : "alpha", "tail" : ": Alpha", "member" : "io.samritchie.rl.util.ConstantStepMonoid.alpha", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#alpha:io.samritchie.rl.util.ConstantStep.Alpha", "kind" : "val"}, {"label" : "combineAll", "tail" : "(t: TraversableOnce[ConstantStep]): ConstantStep", "member" : "com.twitter.algebird.Monoid.combineAll", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#combineAll(t:TraversableOnce[T]):T", "kind" : "def"}, {"label" : "empty", "tail" : "(): ConstantStep", "member" : "com.twitter.algebird.Monoid.empty", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#empty:T", "kind" : "def"}, {"label" : "additive", "tail" : "(): Monoid[ConstantStep]", "member" : "com.twitter.algebird.Monoid.additive", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#additive:algebra.Monoid[T]", "kind" : "def"}, {"label" : "sum", "tail" : "(vs: TraversableOnce[ConstantStep]): ConstantStep", "member" : "com.twitter.algebird.Monoid.sum", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#sum(vs:TraversableOnce[T]):T", "kind" : "def"}, {"label" : "nonZeroOption", "tail" : "(v: ConstantStep): Option[ConstantStep]", "member" : "com.twitter.algebird.Monoid.nonZeroOption", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#nonZeroOption(v:T):Option[T]", "kind" : "def"}, {"label" : "assertNotZero", "tail" : "(v: ConstantStep): Unit", "member" : "com.twitter.algebird.Monoid.assertNotZero", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#assertNotZero(v:T):Unit", "kind" : "def"}, {"label" : "trySum", "tail" : "(as: TraversableOnce[ConstantStep]): Option[ConstantStep]", "member" : "algebra.ring.AdditiveMonoid.trySum", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#trySum(as:TraversableOnce[A]):Option[A]", "kind" : "def"}, {"label" : "sumN", "tail" : "(a: ConstantStep, n: Int): ConstantStep", "member" : "algebra.ring.AdditiveMonoid.sumN", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#sumN(a:A,n:Int):A", "kind" : "def"}, {"label" : "isZero", "tail" : "(a: ConstantStep)(ev: Eq[ConstantStep]): Boolean", "member" : "algebra.ring.AdditiveMonoid.isZero", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#isZero(a:A)(implicitev:algebra.Eq[A]):Boolean", "kind" : "def"}, {"label" : "combineAllOption", "tail" : "(as: TraversableOnce[ConstantStep]): Option[ConstantStep]", "member" : "cats.kernel.Monoid.combineAllOption", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#combineAllOption(as:TraversableOnce[A]):Option[A]", "kind" : "def"}, {"label" : "combineN", "tail" : "(a: ConstantStep, n: Int): ConstantStep", "member" : "cats.kernel.Monoid.combineN", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#combineN(a:A,n:Int):A", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(a: ConstantStep)(ev: Eq[ConstantStep]): Boolean", "member" : "cats.kernel.Monoid.isEmpty", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#isEmpty(a:A)(implicitev:cats.kernel.Eq[A]):Boolean", "kind" : "def"}, {"label" : "combine", "tail" : "(l: ConstantStep, r: ConstantStep): ConstantStep", "member" : "com.twitter.algebird.Semigroup.combine", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#combine(l:T,r:T):T", "kind" : "def"}, {"label" : "sumOption", "tail" : "(iter: TraversableOnce[ConstantStep]): Option[ConstantStep]", "member" : "com.twitter.algebird.Semigroup.sumOption", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#sumOption(iter:TraversableOnce[T]):Option[T]", "kind" : "def"}, {"label" : "positiveSumN", "tail" : "(a: ConstantStep, n: Int): ConstantStep", "member" : "algebra.ring.AdditiveSemigroup.positiveSumN", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#positiveSumN(a:A,n:Int):A", "kind" : "def"}, {"label" : "repeatedCombineN", "tail" : "(a: ConstantStep, n: Int): ConstantStep", "member" : "cats.kernel.Semigroup.repeatedCombineN", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#repeatedCombineN(a:A,n:Int):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/util\/ConstantStepMonoid.html", "kind" : "case class"}], "io.samritchie.rl.policy" : [{"name" : "io.samritchie.rl.policy.EpsilonGreedy", "shortDescription" : "This is a version that accumulates the reward using a monoid.", "object" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html", "members_object" : [{"label" : "incrementalConfig", "tail" : "(epsilon: Double, initial: Double): Config[Double, AveragedValue]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.incrementalConfig", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#incrementalConfig(epsilon:Double,initial:Double):io.samritchie.rl.policy.EpsilonGreedy.Config[Double,com.twitter.algebird.AveragedValue]", "kind" : "def"}, {"label" : "Config", "tail" : "", "member" : "io.samritchie.rl.policy.EpsilonGreedy.Config", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#Config[R,T]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "learn", "tail" : "(state: State[A, R], action: A, reward: R): EpsilonGreedy[A, R, T]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.learn", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#learn(state:io.samritchie.rl.State[A,R],action:A,reward:R):io.samritchie.rl.policy.EpsilonGreedy[A,R,T]", "kind" : "def"}, {"label" : "choose", "tail" : "(state: State[A, R]): Generator[A]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.choose", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#choose(state:io.samritchie.rl.State[A,R]):com.stripe.rainier.core.Generator[A]", "kind" : "def"}, {"member" : "io.samritchie.rl.policy.EpsilonGreedy#<init>", "error" : "unsupported entity"}, {"label" : "actionValues", "tail" : ": Map[A, T]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.actionValues", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#actionValues:Map[A,T]", "kind" : "val"}, {"label" : "config", "tail" : ": Config[R, T]", "member" : "io.samritchie.rl.policy.EpsilonGreedy.config", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#config:io.samritchie.rl.policy.EpsilonGreedy.Config[R,T]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/policy\/EpsilonGreedy.html", "kind" : "case class"}, {"name" : "io.samritchie.rl.policy.Gradient", "shortDescription" : "This thing needs to track its average reward internally...", "object" : "io\/samritchie\/rl\/policy\/Gradient$.html", "members_object" : [{"label" : "fromAggregator", "tail" : "(stepSize: Real, initial: T, agg: Aggregator[R, T, Real])(arg0: ToReal[R]): Config[R, T]", "member" : "io.samritchie.rl.policy.Gradient.fromAggregator", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#fromAggregator[R,T](stepSize:com.stripe.rainier.compute.Real,initial:T,agg:com.twitter.algebird.Aggregator[R,T,com.stripe.rainier.compute.Real])(implicitevidence$6:com.stripe.rainier.compute.ToReal[R]):io.samritchie.rl.policy.Gradient.Config[R,T]", "kind" : "def"}, {"label" : "noBaseline", "tail" : "(stepSize: Real): Config[Double, Unit]", "member" : "io.samritchie.rl.policy.Gradient.noBaseline", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#noBaseline(stepSize:com.stripe.rainier.compute.Real):io.samritchie.rl.policy.Gradient.Config[Double,Unit]", "kind" : "def"}, {"label" : "incrementalConfig", "tail" : "(stepSize: Real, initial: Double): Config[Double, AveragedValue]", "member" : "io.samritchie.rl.policy.Gradient.incrementalConfig", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#incrementalConfig(stepSize:com.stripe.rainier.compute.Real,initial:Double):io.samritchie.rl.policy.Gradient.Config[Double,com.twitter.algebird.AveragedValue]", "kind" : "def"}, {"label" : "Config", "tail" : "", "member" : "io.samritchie.rl.policy.Gradient.Config", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#Config[R,T]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "Item", "tail" : "", "member" : "io.samritchie.rl.policy.Gradient.Item", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#Item[T]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "Item", "tail" : "", "member" : "io.samritchie.rl.policy.Gradient.Item", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#Item", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Gradient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "learn", "tail" : "(state: State[A, R], action: A, reward: R): Gradient[A, R, T]", "member" : "io.samritchie.rl.policy.Gradient.learn", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#learn(state:io.samritchie.rl.State[A,R],action:A,reward:R):io.samritchie.rl.policy.Gradient[A,R,T]", "kind" : "def"}, {"label" : "choose", "tail" : "(state: State[A, R]): Generator[A]", "member" : "io.samritchie.rl.policy.Gradient.choose", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#choose(state:io.samritchie.rl.State[A,R]):com.stripe.rainier.core.Generator[A]", "kind" : "def"}, {"label" : "aToReal", "tail" : ": ToReal[A]", "member" : "io.samritchie.rl.policy.Gradient.aToReal", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#aToReal:com.stripe.rainier.compute.ToReal[A]", "kind" : "implicit val"}, {"member" : "io.samritchie.rl.policy.Gradient#<init>", "error" : "unsupported entity"}, {"label" : "actionValues", "tail" : ": Map[A, Item[T]]", "member" : "io.samritchie.rl.policy.Gradient.actionValues", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#actionValues:Map[A,io.samritchie.rl.policy.Gradient.Item[T]]", "kind" : "val"}, {"label" : "config", "tail" : ": Config[R, T]", "member" : "io.samritchie.rl.policy.Gradient.config", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#config:io.samritchie.rl.policy.Gradient.Config[R,T]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/Gradient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Gradient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/policy\/Gradient.html", "kind" : "case class"}, {"name" : "io.samritchie.rl.policy.Random", "shortDescription" : "Random policy.", "object" : "io\/samritchie\/rl\/policy\/Random$.html", "members_object" : [{"label" : "uniform", "tail" : "(): Random[A, R]", "member" : "io.samritchie.rl.policy.Random.uniform", "link" : "io\/samritchie\/rl\/policy\/Random$.html#uniform[A,R]:io.samritchie.rl.policy.Random[A,R]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/Random$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/Random$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/Random$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/Random$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/Random$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/Random$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/Random$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/Random$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/Random$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/policy\/Random$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/Random$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/policy\/Random$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/policy\/Random$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/Random$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Random$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Random$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "learn", "tail" : "(state: State[A, R], action: A, reward: R): Random[A, R]", "member" : "io.samritchie.rl.policy.Random.learn", "link" : "io\/samritchie\/rl\/policy\/Random.html#learn(state:io.samritchie.rl.State[A,R],action:A,reward:R):io.samritchie.rl.policy.Random[A,R]", "kind" : "def"}, {"label" : "choose", "tail" : "(state: State[A, R]): Generator[A]", "member" : "io.samritchie.rl.policy.Random.choose", "link" : "io\/samritchie\/rl\/policy\/Random.html#choose(state:io.samritchie.rl.State[A,R]):com.stripe.rainier.core.Generator[A]", "kind" : "def"}, {"member" : "io.samritchie.rl.policy.Random#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/Random.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/Random.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/Random.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/Random.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/Random.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/Random.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/Random.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/Random.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/Random.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/Random.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/Random.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/Random.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Random.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/Random.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/policy\/Random.html", "kind" : "case class"}, {"name" : "io.samritchie.rl.policy.UCB", "shortDescription" : "", "object" : "io\/samritchie\/rl\/policy\/UCB$.html", "members_object" : [{"label" : "Choice", "tail" : "", "member" : "io.samritchie.rl.policy.UCB.Choice", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#Choice[T]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "Choice", "tail" : "", "member" : "io.samritchie.rl.policy.UCB.Choice", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#Choice", "kind" : "object"}, {"label" : "Param", "tail" : "", "member" : "io.samritchie.rl.policy.UCB.Param", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#ParamextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Config", "tail" : "", "member" : "io.samritchie.rl.policy.UCB.Config", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#Config[R,T]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "fromAggregator", "tail" : "(initial: T, param: Param, agg: Aggregator[R, T, Double])(arg0: Ordering[T]): Config[R, T]", "member" : "io.samritchie.rl.policy.UCB.fromAggregator", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#fromAggregator[R,T](initial:T,param:io.samritchie.rl.policy.UCB.Param,agg:com.twitter.algebird.Aggregator[R,T,Double])(implicitevidence$1:Ordering[T]):io.samritchie.rl.policy.UCB.Config[R,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/UCB$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/UCB$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "learn", "tail" : "(state: State[A, R], action: A, reward: R): UCB[A, R, T]", "member" : "io.samritchie.rl.policy.UCB.learn", "link" : "io\/samritchie\/rl\/policy\/UCB.html#learn(state:io.samritchie.rl.State[A,R],action:A,reward:R):io.samritchie.rl.policy.UCB[A,R,T]", "kind" : "def"}, {"label" : "choose", "tail" : "(state: State[A, R]): Generator[A]", "member" : "io.samritchie.rl.policy.UCB.choose", "link" : "io\/samritchie\/rl\/policy\/UCB.html#choose(state:io.samritchie.rl.State[A,R]):com.stripe.rainier.core.Generator[A]", "kind" : "def"}, {"member" : "io.samritchie.rl.policy.UCB#<init>", "error" : "unsupported entity"}, {"label" : "time", "tail" : ": Time", "member" : "io.samritchie.rl.policy.UCB.time", "link" : "io\/samritchie\/rl\/policy\/UCB.html#time:io.samritchie.rl.Time", "kind" : "val"}, {"label" : "actionValues", "tail" : ": Map[A, Choice[T]]", "member" : "io.samritchie.rl.policy.UCB.actionValues", "link" : "io\/samritchie\/rl\/policy\/UCB.html#actionValues:Map[A,io.samritchie.rl.policy.UCB.Choice[T]]", "kind" : "val"}, {"label" : "config", "tail" : ": Config[R, T]", "member" : "io.samritchie.rl.policy.UCB.config", "link" : "io\/samritchie\/rl\/policy\/UCB.html#config:io.samritchie.rl.policy.UCB.Config[R,T]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/policy\/UCB.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/policy\/UCB.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/policy\/UCB.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/policy\/UCB.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/policy\/UCB.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/policy\/UCB.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/policy\/UCB.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/UCB.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/UCB.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/policy\/UCB.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/policy\/UCB.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/policy\/UCB.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/policy\/UCB.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/policy\/UCB.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/policy\/UCB.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/policy\/UCB.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/policy\/UCB.html", "kind" : "case class"}], "io.samritchie.rl" : [{"name" : "io.samritchie.rl.Decider", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Decider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Decider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Decider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Decider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Decider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Decider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Decider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Decider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Decider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Decider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Decider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Decider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Decider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Decider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Decider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Decider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Decider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Decider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Decider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "choose", "tail" : "(state: State[A, R]): M[A]", "member" : "io.samritchie.rl.Decider.choose", "link" : "io\/samritchie\/rl\/Decider.html#choose(state:io.samritchie.rl.State[A,R]):M[A]", "kind" : "abstract def"}], "shortDescription" : "Trait for things that can choose some Monadic result.", "trait" : "io\/samritchie\/rl\/Decider.html", "kind" : "trait"}, {"name" : "io.samritchie.rl.Game", "shortDescription" : "Playing the game, currently.", "object" : "io\/samritchie\/rl\/Game$.html", "members_object" : [{"label" : "main", "tail" : "(items: Array[String]): Unit", "member" : "io.samritchie.rl.Game.main", "link" : "io\/samritchie\/rl\/Game$.html#main(items:Array[String]):Unit", "kind" : "def"}, {"label" : "play", "tail" : "(policy: EG): List[Double]", "member" : "io.samritchie.rl.Game.play", "link" : "io\/samritchie\/rl\/Game$.html#play(policy:io.samritchie.rl.Game.EG):List[Double]", "kind" : "def"}, {"label" : "stateGen", "tail" : ": Generator[Bandit[Arm, Double]]", "member" : "io.samritchie.rl.Game.stateGen", "link" : "io\/samritchie\/rl\/Game$.html#stateGen:com.stripe.rainier.core.Generator[io.samritchie.rl.state.Bandit[io.samritchie.rl.state.Bandit.Arm,Double]]", "kind" : "val"}, {"label" : "playBandit", "tail" : "(policy: P, stateGen: Generator[Bandit[A, R]], nRuns: Int, timeSteps: Int, penalty: R)(reduce: (List[R]) ⇒ R): (List[(P, State[A, R])], List[R])", "member" : "io.samritchie.rl.Game.playBandit", "link" : "io\/samritchie\/rl\/Game$.html#playBandit[A,R,P<:io.samritchie.rl.Policy[A,R,P]](policy:P,stateGen:com.stripe.rainier.core.Generator[io.samritchie.rl.state.Bandit[A,R]],nRuns:Int,timeSteps:Int,penalty:R)(reduce:List[R]=>R):(List[(P,io.samritchie.rl.State[A,R])],List[R])", "kind" : "def"}, {"label" : "average", "tail" : "(s: Iterable[Double]): Double", "member" : "io.samritchie.rl.Game.average", "link" : "io\/samritchie\/rl\/Game$.html#average(s:Iterable[Double]):Double", "kind" : "def"}, {"label" : "evaluator", "tail" : ": Numeric[Real]", "member" : "io.samritchie.rl.Game.evaluator", "link" : "io\/samritchie\/rl\/Game$.html#evaluator:Numeric[com.stripe.rainier.compute.Real]", "kind" : "implicit val"}, {"label" : "rng", "tail" : ": RNG", "member" : "io.samritchie.rl.Game.rng", "link" : "io\/samritchie\/rl\/Game$.html#rng:com.stripe.rainier.sampler.RNG", "kind" : "implicit val"}, {"label" : "EG", "tail" : "", "member" : "io.samritchie.rl.Game.EG", "link" : "io\/samritchie\/rl\/Game$.html#EG=io.samritchie.rl.policy.EpsilonGreedy[io.samritchie.rl.state.Bandit.Arm,Double,com.twitter.algebird.AveragedValue]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Game$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Game$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Game$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Game$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Game$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Game$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Game$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Game$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Game$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Game$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Game$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Game$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Game$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Game$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Game$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Game$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Game$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Game$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Game$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.samritchie.rl.Learner", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Learner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Learner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Learner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Learner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Learner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Learner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Learner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Learner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Learner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Learner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Learner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Learner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Learner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Learner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Learner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Learner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Learner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Learner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Learner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "learn", "tail" : "(state: State[A, R], action: A, reward: R): This", "member" : "io.samritchie.rl.Learner.learn", "link" : "io\/samritchie\/rl\/Learner.html#learn(state:io.samritchie.rl.State[A,R],action:A,reward:R):This", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/samritchie\/rl\/Learner.html", "kind" : "trait"}, {"name" : "io.samritchie.rl.Plot", "shortDescription" : "", "object" : "io\/samritchie\/rl\/Plot$.html", "members_object" : [{"label" : "main", "tail" : "(items: Array[String]): Unit", "member" : "io.samritchie.rl.Plot.main", "link" : "io\/samritchie\/rl\/Plot$.html#main(items:Array[String]):Unit", "kind" : "def"}, {"label" : "polyPlot", "tail" : "(): Unit", "member" : "io.samritchie.rl.Plot.polyPlot", "link" : "io\/samritchie\/rl\/Plot$.html#polyPlot():Unit", "kind" : "def"}, {"label" : "lineChart", "tail" : "(data: Seq[(Seq[Point], String)]): Unit", "member" : "io.samritchie.rl.Plot.lineChart", "link" : "io\/samritchie\/rl\/Plot$.html#lineChart(data:Seq[(Seq[com.cibo.evilplot.numeric.Point],String)]):Unit", "kind" : "def"}, {"label" : "lineChartSeq", "tail" : "(pointSeq: (Seq[Double], String)*): Unit", "member" : "io.samritchie.rl.Plot.lineChartSeq", "link" : "io\/samritchie\/rl\/Plot$.html#lineChartSeq(pointSeq:(Seq[Double],String)*):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Plot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Plot$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Plot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Plot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Plot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Plot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Plot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Plot$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Plot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Plot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Plot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Plot$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Plot$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Plot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Plot$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Plot$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Plot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Plot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Plot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.samritchie.rl.Policy", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Policy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Policy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Policy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Policy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Policy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Policy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Policy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Policy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Policy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Policy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Policy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Policy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Policy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Policy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Policy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Policy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "choose", "tail" : "(state: State[A, R]): Generator[A]", "member" : "io.samritchie.rl.Decider.choose", "link" : "io\/samritchie\/rl\/Policy.html#choose(state:io.samritchie.rl.State[A,R]):M[A]", "kind" : "abstract def"}, {"label" : "learn", "tail" : "(state: State[A, R], action: A, reward: R): This", "member" : "io.samritchie.rl.Learner.learn", "link" : "io\/samritchie\/rl\/Policy.html#learn(state:io.samritchie.rl.State[A,R],action:A,reward:R):This", "kind" : "abstract def"}], "shortDescription" : "This is how agents actually choose what comes next.", "object" : "io\/samritchie\/rl\/Policy$.html", "members_object" : [{"label" : "playManyN", "tail" : "(pairs: List[(P, State[A, R])], penalty: R, nTimes: Int)(rewardSum: (List[R]) ⇒ R): Generator[(List[(P, State[A, R])], List[R])]", "member" : "io.samritchie.rl.Policy.playManyN", "link" : "io\/samritchie\/rl\/Policy$.html#playManyN[A,R,P<:io.samritchie.rl.Policy[A,R,P]](pairs:List[(P,io.samritchie.rl.State[A,R])],penalty:R,nTimes:Int)(rewardSum:List[R]=>R):com.stripe.rainier.core.Generator[(List[(P,io.samritchie.rl.State[A,R])],List[R])]", "kind" : "def"}, {"label" : "playMany", "tail" : "(pairs: List[(P, State[A, R])], penalty: R)(rewardSum: (List[R]) ⇒ R): Generator[(List[(P, State[A, R])], R)]", "member" : "io.samritchie.rl.Policy.playMany", "link" : "io\/samritchie\/rl\/Policy$.html#playMany[A,R,P<:io.samritchie.rl.Policy[A,R,P]](pairs:List[(P,io.samritchie.rl.State[A,R])],penalty:R)(rewardSum:List[R]=>R):com.stripe.rainier.core.Generator[(List[(P,io.samritchie.rl.State[A,R])],R)]", "kind" : "def"}, {"label" : "playN", "tail" : "(policy: P, state: State[A, R], penalty: R, nTimes: Int): Generator[(P, Seq[R], State[A, R])]", "member" : "io.samritchie.rl.Policy.playN", "link" : "io\/samritchie\/rl\/Policy$.html#playN[A,R,P<:io.samritchie.rl.Policy[A,R,P]](policy:P,state:io.samritchie.rl.State[A,R],penalty:R,nTimes:Int):com.stripe.rainier.core.Generator[(P,Seq[R],io.samritchie.rl.State[A,R])]", "kind" : "def"}, {"label" : "play", "tail" : "(policy: P, state: State[A, R], penalty: R): Generator[(P, R, State[A, R])]", "member" : "io.samritchie.rl.Policy.play", "link" : "io\/samritchie\/rl\/Policy$.html#play[A,R,P<:io.samritchie.rl.Policy[A,R,P]](policy:P,state:io.samritchie.rl.State[A,R],penalty:R):com.stripe.rainier.core.Generator[(P,R,io.samritchie.rl.State[A,R])]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Policy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Policy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Policy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Policy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Policy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Policy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Policy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Policy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Policy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Policy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Policy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Policy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Policy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Policy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Policy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Policy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Policy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/samritchie\/rl\/Policy.html", "kind" : "trait"}, {"name" : "io.samritchie.rl.State", "members_trait" : [{"label" : "actions", "tail" : "(): Set[A]", "member" : "io.samritchie.rl.State.actions", "link" : "io\/samritchie\/rl\/State.html#actions:Set[A]", "kind" : "def"}, {"label" : "act", "tail" : "(action: A): Option[Generator[(Reward, State[A, Reward])]]", "member" : "io.samritchie.rl.State.act", "link" : "io\/samritchie\/rl\/State.html#act(action:A):Option[com.stripe.rainier.core.Generator[(Reward,io.samritchie.rl.State[A,Reward])]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/State.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/State.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/State.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/State.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/State.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/State.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/State.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/State.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/State.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/State.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/State.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/State.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/State.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/State.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/State.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/State.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dynamics", "tail" : "(): Map[A, Generator[(Reward, State[A, Reward])]]", "member" : "io.samritchie.rl.State.dynamics", "link" : "io\/samritchie\/rl\/State.html#dynamics:Map[A,com.stripe.rainier.core.Generator[(Reward,io.samritchie.rl.State[A,Reward])]]", "kind" : "abstract def"}], "shortDescription" : "A world should probably have a generator of states andactions...", "object" : "io\/samritchie\/rl\/State$.html", "members_object" : [{"label" : "fromMap", "tail" : "(dynamics: Map[A, Generator[(R, State[A, R])]]): MapState[A, R]", "member" : "io.samritchie.rl.State.fromMap", "link" : "io\/samritchie\/rl\/State$.html#fromMap[A,R](dynamics:Map[A,com.stripe.rainier.core.Generator[(R,io.samritchie.rl.State[A,R])]]):io.samritchie.rl.State.MapState[A,R]", "kind" : "def"}, {"label" : "MapState", "tail" : "", "member" : "io.samritchie.rl.State.MapState", "link" : "io\/samritchie\/rl\/State$.html#MapState[A,R]extendsState[A,R]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/State$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/State$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/State$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/State$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/State$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/State$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/State$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/State$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/State$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/State$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/State$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/State$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/State$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/State$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/State$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/State$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/State$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/samritchie\/rl\/State.html", "kind" : "trait"}, {"name" : "io.samritchie.rl.StochasticDecider", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/StochasticDecider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/StochasticDecider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/StochasticDecider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/StochasticDecider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/StochasticDecider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/StochasticDecider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/StochasticDecider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/StochasticDecider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/StochasticDecider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/StochasticDecider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/StochasticDecider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/StochasticDecider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/StochasticDecider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/StochasticDecider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/StochasticDecider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/StochasticDecider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/StochasticDecider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/StochasticDecider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/StochasticDecider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "choose", "tail" : "(state: State[A, R]): Generator[A]", "member" : "io.samritchie.rl.Decider.choose", "link" : "io\/samritchie\/rl\/StochasticDecider.html#choose(state:io.samritchie.rl.State[A,R]):M[A]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/samritchie\/rl\/StochasticDecider.html", "kind" : "trait"}, {"name" : "io.samritchie.rl.Time", "shortDescription" : "", "object" : "io\/samritchie\/rl\/Time$.html", "members_object" : [{"label" : "Zero", "tail" : ": Time", "member" : "io.samritchie.rl.Time.Zero", "link" : "io\/samritchie\/rl\/Time$.html#Zero:io.samritchie.rl.Time", "kind" : "val"}, {"label" : "Max", "tail" : ": Time", "member" : "io.samritchie.rl.Time.Max", "link" : "io\/samritchie\/rl\/Time$.html#Max:io.samritchie.rl.Time", "kind" : "val"}, {"label" : "Min", "tail" : ": Time", "member" : "io.samritchie.rl.Time.Min", "link" : "io\/samritchie\/rl\/Time$.html#Min:io.samritchie.rl.Time", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Time$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Time$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Time$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Time$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Time$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Time$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Time$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Time$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Time$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Time$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Time$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Time$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Time$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Time$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Time$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Time$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Time$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Time$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Time$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "compareTo", "tail" : "(r: Time): Int", "member" : "io.samritchie.rl.Time.compareTo", "link" : "io\/samritchie\/rl\/Time.html#compareTo(r:io.samritchie.rl.Time):Int", "kind" : "def"}, {"label" : "<", "tail" : "(r: Time): Boolean", "member" : "io.samritchie.rl.Time.<", "link" : "io\/samritchie\/rl\/Time.html#<(r:io.samritchie.rl.Time):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(r: Time): Boolean", "member" : "io.samritchie.rl.Time.<=", "link" : "io\/samritchie\/rl\/Time.html#<=(r:io.samritchie.rl.Time):Boolean", "kind" : "def"}, {"label" : "+", "tail" : "(r: Time): Long", "member" : "io.samritchie.rl.Time.+", "link" : "io\/samritchie\/rl\/Time.html#+(r:io.samritchie.rl.Time):Long", "kind" : "def"}, {"label" : "-", "tail" : "(r: Time): Long", "member" : "io.samritchie.rl.Time.-", "link" : "io\/samritchie\/rl\/Time.html#-(r:io.samritchie.rl.Time):Long", "kind" : "def"}, {"label" : "tick", "tail" : "(): Time", "member" : "io.samritchie.rl.Time.tick", "link" : "io\/samritchie\/rl\/Time.html#tick:io.samritchie.rl.Time", "kind" : "def"}, {"member" : "io.samritchie.rl.Time#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Long", "member" : "io.samritchie.rl.Time.value", "link" : "io\/samritchie\/rl\/Time.html#value:Long", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "io\/samritchie\/rl\/Time.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "io\/samritchie\/rl\/Time.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Time.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Time.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "io\/samritchie\/rl\/Time.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "io\/samritchie\/rl\/Time.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "io\/samritchie\/rl\/Time.html", "kind" : "case class"}, {"name" : "io.samritchie.rl.Util", "shortDescription" : "", "object" : "io\/samritchie\/rl\/Util$.html", "members_object" : [{"label" : "iterateM", "tail" : "(n: Int)(a: A)(f: (A) ⇒ F[A])(arg0: Monad[F]): F[A]", "member" : "io.samritchie.rl.Util.iterateM", "link" : "io\/samritchie\/rl\/Util$.html#iterateM[F[_],A](n:Int)(a:A)(f:A=>F[A])(implicitevidence$6:cats.Monad[F]):F[A]", "kind" : "def"}, {"label" : "softmax", "tail" : "(as: Set[A])(arg0: ToReal[A]): Categorical[A]", "member" : "io.samritchie.rl.Util.softmax", "link" : "io\/samritchie\/rl\/Util$.html#softmax[A](as:Set[A])(implicitevidence$5:com.stripe.rainier.compute.ToReal[A]):com.stripe.rainier.core.Categorical[A]", "kind" : "def"}, {"label" : "softmax", "tail" : "(m: Map[A, Real]): Categorical[A]", "member" : "io.samritchie.rl.Util.softmax", "link" : "io\/samritchie\/rl\/Util$.html#softmax[A,B](m:Map[A,com.stripe.rainier.compute.Real]):com.stripe.rainier.core.Categorical[A]", "kind" : "def"}, {"label" : "generatorFromSet", "tail" : "(items: Set[A]): Generator[A]", "member" : "io.samritchie.rl.Util.generatorFromSet", "link" : "io\/samritchie\/rl\/Util$.html#generatorFromSet[A](items:Set[A]):com.stripe.rainier.core.Generator[A]", "kind" : "def"}, {"label" : "allMaxBy", "tail" : "(as: Set[A])(f: (A) ⇒ B)(arg0: Ordering[B]): Set[A]", "member" : "io.samritchie.rl.Util.allMaxBy", "link" : "io\/samritchie\/rl\/Util$.html#allMaxBy[A,B](as:Set[A])(f:A=>B)(implicitevidence$4:Ordering[B]):Set[A]", "kind" : "def"}, {"label" : "mergeV", "tail" : "(m: Map[K, V], k: K, delta: V)(arg0: Semigroup[V]): Map[K, V]", "member" : "io.samritchie.rl.Util.mergeV", "link" : "io\/samritchie\/rl\/Util$.html#mergeV[K,V](m:Map[K,V],k:K,delta:V)(implicitevidence$3:com.twitter.algebird.Semigroup[V]):Map[K,V]", "kind" : "def"}, {"label" : "updateWith", "tail" : "(m: Map[K, V], k: K)(f: (Option[V]) ⇒ V): Map[K, V]", "member" : "io.samritchie.rl.Util.updateWith", "link" : "io\/samritchie\/rl\/Util$.html#updateWith[K,V](m:Map[K,V],k:K)(f:Option[V]=>V):Map[K,V]", "kind" : "def"}, {"label" : "makeMap", "tail" : "(keys: Set[K])(f: (K) ⇒ V): Map[K, V]", "member" : "io.samritchie.rl.Util.makeMap", "link" : "io\/samritchie\/rl\/Util$.html#makeMap[K,V](keys:Set[K])(f:K=>V):Map[K,V]", "kind" : "def"}, {"label" : "makeMap", "tail" : "(keys: Set[K])(default: ⇒ V)(f: (K) ⇒ Option[V]): Map[K, V]", "member" : "io.samritchie.rl.Util.makeMap", "link" : "io\/samritchie\/rl\/Util$.html#makeMap[K,V](keys:Set[K])(default:=>V)(f:K=>Option[V]):Map[K,V]", "kind" : "def"}, {"label" : "Instances", "tail" : "", "member" : "io.samritchie.rl.Util.Instances", "link" : "io\/samritchie\/rl\/Util$.html#Instances", "kind" : "object"}, {"label" : "prepareMonoid", "tail" : "(prepare: (A) ⇒ B)(arg0: Monoid[B], arg1: ToReal[B]): MonoidAggregator[A, B, Real]", "member" : "io.samritchie.rl.Util.prepareMonoid", "link" : "io\/samritchie\/rl\/Util$.html#prepareMonoid[A,B](prepare:A=>B)(implicitevidence$1:com.twitter.algebird.Monoid[B],implicitevidence$2:com.stripe.rainier.compute.ToReal[B]):com.twitter.algebird.MonoidAggregator[A,B,com.stripe.rainier.compute.Real]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/Util$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/Util$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/Util$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/Util$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/Util$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/Util$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/Util$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Util$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Util$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/Util$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/Util$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/Util$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/Util$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/Util$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/Util$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/Util$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/Util$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/Util$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/Util$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.samritchie.rl.ValueFunction", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/ValueFunction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/ValueFunction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/ValueFunction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/ValueFunction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/ValueFunction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/ValueFunction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/ValueFunction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/ValueFunction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/ValueFunction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/ValueFunction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/ValueFunction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/ValueFunction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/ValueFunction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/ValueFunction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/ValueFunction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/ValueFunction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "TODO Figure out how to make something that tracks action and statevalues here.", "object" : "io\/samritchie\/rl\/ValueFunction$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/samritchie\/rl\/ValueFunction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/samritchie\/rl\/ValueFunction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/samritchie\/rl\/ValueFunction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/samritchie\/rl\/ValueFunction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/samritchie\/rl\/ValueFunction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/samritchie\/rl\/ValueFunction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/samritchie\/rl\/ValueFunction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/samritchie\/rl\/ValueFunction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/samritchie\/rl\/ValueFunction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/samritchie\/rl\/ValueFunction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/samritchie\/rl\/ValueFunction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/samritchie\/rl\/ValueFunction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/samritchie\/rl\/ValueFunction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/samritchie\/rl\/ValueFunction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/samritchie\/rl\/ValueFunction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/samritchie\/rl\/ValueFunction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/samritchie\/rl\/ValueFunction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/samritchie\/rl\/ValueFunction.html", "kind" : "trait"}], "io" : [], "io.samritchie" : []};